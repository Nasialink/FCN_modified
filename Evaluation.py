# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gu34cLf32yI-MZheiR6386rUU3-vjh8z
"""

import os
import tensorflow
import keras
import math
import matplotlib.pyplot as plt
import zipfile  # For faster extraction
import SimpleITK as sitk  # For loading the dataset
import numpy as np  # For data manipulation
import model
from model import loss_gt
import group_norm
import glob  # For populating the list of files
from scipy.ndimage import zoom  # For resizing
import re  # For parsing the filenames (to know their modality)
#import example_on_brats2018 #import resize #,read_img, preprocess, preprocess_label
from functions import *
import nibabel as nib


def predict_gt(model, input_data):
    # Set the VAE branch's output layer to None
    model.get_layer('Dec_VAE_Output').outbound_nodes = None

    # Predict using the modified model
    predictions = model.predict(input_data)

    # Return only the predictions from the GT branch
    gt_predictions = predictions[0]

    return gt_predictions

def plot_labels(label, data, num_patients, output_folder, num_slices=None):
    #patients = data.shape[0]
    if num_slices is None:
        num_slices = data.shape[-1]
    for i in range(num_patients):
        for j in range(num_slices):
            plt.imshow(y_pred[i, label, :, :, j], cmap='gray')
            filename = os.path.join(output_folder, 'patient_'+str(i)+'_slice_'+str(j)+'.png')
            plt.savefig(filename)
            #plt.show()

root_path='/home/nasia/Documents/BRATS/data/training_11142023_235327'
#path_checkpoint = root_path +'/cp.ckpt'
save_pred_path = root_path+'/predictions'
save_model_path = root_path+'/saved_model/mymodel.keras'
test_file = root_path+'/testset'

"""data_path = '/content/gdrive/MyDrive/Diplomatiki_new/brats/data.nii.gz'
labels_path = '/content/gdrive/MyDrive/Diplomatiki_new/brats/labels.nii.gz'
path_checkpoint = '/content/gdrive/MyDrive/Diplomatiki_new/brats/training/cp.ckpt'
save_pred_path = '/content/gdrive/MyDrive/Diplomatiki_new/brats/predictions'
save_model_path = '/content/gdrive/MyDrive/Diplomatiki_new/brats/saved_model/mymodel.keras'"""

index_path= save_pred_path + '/test_ind.npy'
img_folder = os.path.join(root_path, 'figures')
if not os.path.exists(img_folder):
    os.makedirs(img_folder)
#count = 5

data = nib.load(test_file+'/data_test.nii.gz')
labels = nib.load(test_file+'/labels_test.nii.gz')
np_data_t = data.get_fdata()
np_labels_t = labels.get_fdata()
print('data size', np_data_t.shape)
print('np_labels_t', np_labels_t.shape)

# plt.imshow(np_labels_t[3, 0, :, :, 25], cmap='gray')
# plt.show()
"""test_ind=np.load(index_path)
test = np_data[test_ind,:,:,:,:]
labels_te= np_labels[test_ind,:,:,:,:]"""

model_v = keras.models.load_model(save_model_path, compile=False)   # solution from https://stackoverflow.com/questions/48373845/loading-model-with-custom-loss-keras

y_pred= predict_gt(model_v, np_data_t)

print(type(y_pred), y_pred.shape)
plot_labels(1, y_pred, 10, img_folder, None)
# np.save(os.path.join(save_pred_path, 'y_pred.npy'), y_pred)
